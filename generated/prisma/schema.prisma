generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  directUrl    = env("DIRECT_URL")
  relationMode = "prisma"
}

model Status {
  id         Int      @id @default(autoincrement())
  status     String   @default("active")
  database   String   @default("connected")
  timestamp  DateTime @default(now())
  error      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  redis      String   @default("connected")
  tcpClients Int      @default(0)
}

model GpsData {
  id          Int      @id @default(autoincrement())
  rawData     String
  timestamp   DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  from        String
  mainCommand String?
  parsedData  String?
  packetInfo  String?
}

model PositionData {
  id              Int      @id @default(autoincrement())
  latitude        Float
  longitude       Float
  speed           Float
  angle           Float
  gpsStatus       String
  digitalInputs   String
  ignition        Boolean
  oilResistance   Int
  voltage         Float
  mileage         Int
  temperature     Float
  blindAlarms     String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  mainCommand     String
  packetLength    Int
  pseudoIP        String
  rawData         String
  timestamp       DateTime @default(now())
  clientId        String
  sim             String
  overSpeed       String
  nightTraffic    String
  vehicleId       Int?
  vehiclePlate    String?
  vehicleColor    String?
  vehicleDistrict String?
}

model AlarmData {
  id                 Int      @id @default(autoincrement())
  alarms             String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  mainCommand        String
  packetLength       Int
  pseudoIP           String
  rawData            String
  centerEnabledAlarm Boolean
  crossBorder        Boolean
  emergency          Boolean
  enterBorder        Boolean
  illegalDoorOpen    Boolean
  illegalStart       Boolean
  oilChange          Boolean
  overSpeed          Boolean
  overVoltage        Boolean
  overload           Boolean
  overtimeDriving    Boolean
  parking            Boolean
  powerFailure       Boolean
  underVoltage       Boolean
  vibration          Boolean
  timestamp          DateTime @default(now())
  clientId           String
  sim                String?
}

model HeartbeatData {
  id               Int      @id @default(autoincrement())
  calibrationValue Int
  mainOrderReply   Int
  slaveOrderReply  Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  mainCommand      String
  packetLength     Int
  pseudoIP         String
  rawData          String
  timestamp        DateTime @default(now())
  clientId         String
  sim              String
}

model TrackerStatus {
  id                   Int      @id @default(autoincrement())
  samplingTime         String
  alarmStatus          Int?
  located              Boolean?
  samplingType         String?
  samplingValue        Int?
  sendingType          String?
  carStopSetting       Int?
  overspeedSetting     Int?
  phoneLimit           Boolean?
  areaNodeLimit        Boolean?
  safeSetting          Int?
  longTimeDriving      Int?
  samplingValueAccOff  Int?
  emergencyAlarmSwitch Boolean?
  photographRelated    Int?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  mainCommand          String?
  packetLength         Int?
  pseudoIP             String?
  rawData              String?
  timestamp            DateTime @default(now())
  clientId             String
  sim                  String?
}

model IButtonData {
  id           Int      @id @default(autoincrement())
  subCommand   Int?
  message      String?
  driverName   String?
  driverId     String?
  swipeData    String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  mainCommand  String?
  packetLength Int?
  pseudoIP     String?
  rawData      String?
  timestamp    DateTime @default(now())
  clientId     String
  sim          String?
}

model WhiteListPseudoIP {
  id        Int      @id @default(autoincrement())
  PseudoIP  String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vehicle {
  id         Int      @id @default(autoincrement())
  plate      String
  model      String
  pseudoIP   String
  driverName String
  color      String
  district   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  isActive   Boolean
}
